version: '2.4'

networks:
  docker-network:


  
services:

  eureka-server-service:
    build:
      context: ./
      dockerfile: Dockerfile_5
    image: eureka-server-service:latest
    hostname: eureka-server-service
    restart: always
    healthcheck:
      test: "exit 0"
    expose:
      - 8761
    ports:
      - 8761:8761
    networks:
      - docker-network
    container_name: eureka-server-service
    
    
  mongoDB:
    image: mongo:latest
    container_name: mongoDB
    hostname: mongoDB
    healthcheck:
      test: "exit 0"
    ports:
      - 27017:27017
    expose:
      - 27017
    networks:
      - docker-network



  config-server-service:
    build:
      context: ./
      dockerfile: Dockerfile_1
    depends_on:
      eureka-server-service:
        condition: service_healthy
    image: config-server-service:latest
    hostname: config-server-service
    restart: always
    healthcheck:
      test: "exit 0"
    expose:
      - 9010
    ports:
      - 9010:9010
    container_name: config-server-service

    networks:
      - docker-network

      

  gateway-service:
    build:
      context: ./
      dockerfile: Dockerfile_4
    image: gateway-service:latest
    hostname: gateway-service
    restart: always
    depends_on:
      eureka-server-service:
        condition: service_healthy
    ports:
      - 9020:9020
    expose:
      - 9020
    networks:
      - docker-network
    container_name: gateway-service
    depends_on:
      eureka-server-service:
        condition: service_started
      
        
        
  customer-service:
    build:
      context: ./
      dockerfile: Dockerfile_2
    depends_on:
      config-server-service:
        condition: service_healthy
      mongoDB:
        condition: service_healthy
      eureka-server-service:
        condition: service_healthy
     
    image: customer-service:latest
    ports:
      - 8081:8081
    expose:
      - 8081
    container_name: customer-service
    hostname: customer-service
    restart: always
    networks:
      - docker-network


      


  transaction-service:
    build:
      context: ./
      dockerfile: Dockerfile_3
    depends_on:
      config-server-service:
        condition: service_healthy
      mongoDB:
        condition: service_healthy
      eureka-server-service:
        condition: service_healthy
    image: transaction-service:latest
    ports:
      - 8082:8082
    expose:
      - 8082
    container_name: transaction-service
    hostname: transaction-service
    restart: always
    networks:
      - docker-network



